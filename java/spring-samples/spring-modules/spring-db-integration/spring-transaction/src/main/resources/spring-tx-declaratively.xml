<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
    		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    		http://www.springframework.org/schema/beans 
    		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    		http://www.springframework.org/schema/context 
    		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
    		http://www.springframework.org/schema/jee 
    		http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
    		http://www.springframework.org/schema/tx 
    		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    		http://www.springframework.org/schema/util 
			http://www.springframework.org/schema/util/spring-util.xsd
    		http://www.springframework.org/schema/task 
    		http://www.springframework.org/schema/task/spring-task-3.2.xsd
    		http://www.springframework.org/schema/mvc
    		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<aop:aspectj-autoproxy />
	<context:annotation-config />
	<context:component-scan base-package="code.sample.spring.transaction" />
	
	<!-- 数据源配置 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
			<!-- XML中[&]用[&amp;]代替 -->
		<property name="url"
			value="jdbc:mysql://localhost:3306/mybatis_learn?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="7" />
	</bean>
	
	<!-- Hibernate配置 -->
	<!-- Spring5版本的类名是org.springframework.orm.hibernate5.LocalSessionFactoryBean -->
	<!-- Spring4版本的类名是org.springframework.orm.hibernate4.LocalSessionFactoryBean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="code.sample.spring.transaction.model"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- Hibernate配置：https://developer.aliyun.com/article/102052 -->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>
	
	<!-- Spring针对Hibernate提供的事务管理器 -->
	<!-- Spring5版本的类名是org.springframework.orm.hibernate5.HibernateTransactionManager -->
	<!-- Spring4版本的类名是org.springframework.orm.hibernate4.HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- To add exception translation to a template-less Hibernate DAO, we just 
		need to add a PersistenceExceptionTranslationPostProcessor bean to the Spring 
		application context: -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
		
	<!-- PersistenceExceptionTranslationPostProcessor is a bean post processor 
		which adds an advisor to any bean that’s annotated with @Repository so that 
		any platform specific exceptions are caught and then rethrown as one of Spring’s 
		unchecked data access exceptions. -->

	<!-- If the bean id of ur transaction manager is "transactionManager" then 
		you don't need to mention 'transaction-manager' attribute in <tx:advice/> -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"
				isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 事务切面配置 -->
	<aop:config>
		<aop:pointcut id="advicePointCut"
			expression="execution(* code.sample.spring.transaction.dao.BookPurchaseDao.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="advicePointCut" />
	</aop:config>
</beans>  