[2022-03-10 15:44:05.846] [DEBUG][main] AnnotationConfigApplicationContext: org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@e2d56bf
[2022-03-10 15:44:05.863] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2022-03-10 15:44:05.920] [DEBUG][main] ClassPathBeanDefinitionScanner: org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:435) - Identified candidate component class: file [D:\Projects\Github\code-example\spring-samples\spring-modules\spring-db-integration\spring-transaction\target\classes\code\sample\spring\transaction\business\dao\AccountDaoImpl.class]
[2022-03-10 15:44:05.925] [DEBUG][main] ClassPathBeanDefinitionScanner: org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:435) - Identified candidate component class: file [D:\Projects\Github\code-example\spring-samples\spring-modules\spring-db-integration\spring-transaction\target\classes\code\sample\spring\transaction\business\service\AccountServiceImpl.class]
[2022-03-10 15:44:06.030] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
[2022-03-10 15:44:06.031] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
[2022-03-10 15:44:06.031] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
[2022-03-10 15:44:06.035] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2022-03-10 15:44:06.036] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2022-03-10 15:44:06.039] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2022-03-10 15:44:06.040] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2022-03-10 15:44:06.081] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'dataSourceConfiguration'
[2022-03-10 15:44:06.086] [DEBUG][main] PropertySourcesPropertyResolver: org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'jdbc.driver' in PropertySource 'class path resource [jdbc.properties]' with value of type String
[2022-03-10 15:44:06.086] [DEBUG][main] PropertySourcesPropertyResolver: org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'jdbc.url' in PropertySource 'class path resource [jdbc.properties]' with value of type String
[2022-03-10 15:44:06.087] [DEBUG][main] PropertySourcesPropertyResolver: org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'jdbc.username' in PropertySource 'class path resource [jdbc.properties]' with value of type String
[2022-03-10 15:44:06.087] [DEBUG][main] PropertySourcesPropertyResolver: org.springframework.core.env.PropertySourcesPropertyResolver.logKeyFound(PropertySourcesPropertyResolver.java:115) - Found key 'jdbc.password' in PropertySource 'class path resource [jdbc.properties]' with value of type String
[2022-03-10 15:44:06.088] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2022-03-10 15:44:06.088] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
[2022-03-10 15:44:06.097] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'transactionAttributeSource'
[2022-03-10 15:44:06.102] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'transactionInterceptor'
[2022-03-10 15:44:06.103] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:808) - Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
[2022-03-10 15:44:06.110] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:808) - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
[2022-03-10 15:44:06.110] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:808) - Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
[2022-03-10 15:44:06.114] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'accountDaoImpl'
[2022-03-10 15:44:06.116] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'jdbcTemplate'
[2022-03-10 15:44:06.119] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'dataSource'
[2022-03-10 15:44:06.142] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:808) - Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
[2022-03-10 15:44:06.143] [ INFO][main] DataSourceConfiguration: code.sample.spring.transaction.declaratively.annotation.DataSourceConfiguration.jdbcTemplate(DataSourceConfiguration.java:79) - Init JdbcTemplate with DataSource => org.apache.commons.dbcp.BasicDataSource@4009e306
[2022-03-10 15:44:06.160] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'accountServiceImpl'
[2022-03-10 15:44:06.178] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'code.sample.spring.transaction.declaratively.annotation.SpringContext'
[2022-03-10 15:44:06.179] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'transactionManager'
[2022-03-10 15:44:06.179] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:808) - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
[2022-03-10 15:44:06.185] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'transactionTemplate'
[2022-03-10 15:44:06.185] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:808) - Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
[2022-03-10 15:44:06.188] [DEBUG][main] DefaultListableBeanFactory: org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225) - Creating shared instance of singleton bean 'springDataSource'
[2022-03-10 15:44:06.190] [DEBUG][main] DriverManagerDataSource: org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:134) - Loaded JDBC driver: com.mysql.jdbc.Driver
[2022-03-10 15:44:06.209] [DEBUG][main] DataSourceTransactionManager: org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [code.sample.spring.transaction.business.service.AccountServiceImpl.transfer]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
[2022-03-10 15:44:06.407] [DEBUG][main] DataSourceTransactionManager: org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:267) - Acquired Connection [jdbc:mysql://localhost:3306/mybatis_learn?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
[2022-03-10 15:44:06.409] [DEBUG][main] DataSourceTransactionManager: org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:285) - Switching JDBC Connection [jdbc:mysql://localhost:3306/mybatis_learn?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8, UserName=root@localhost, MySQL Connector Java] to manual commit
[2022-03-10 15:44:06.417] [ INFO][main] AccountDaoImpl: code.sample.spring.transaction.business.dao.AccountDaoImpl.outMoney(AccountDaoImpl.java:37) - 
Execute SQL => update account set money = money - 200.0 where name = zs
[2022-03-10 15:44:06.418] [DEBUG][main] JdbcTemplate: org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:958) - Executing prepared SQL update
[2022-03-10 15:44:06.418] [DEBUG][main] JdbcTemplate: org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:643) - Executing prepared SQL statement [update account set money = money - ? where name = ?]
[2022-03-10 15:44:06.446] [DEBUG][main] DataSourceTransactionManager: org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:833) - Initiating transaction rollback
[2022-03-10 15:44:06.447] [DEBUG][main] DataSourceTransactionManager: org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:345) - Rolling back JDBC transaction on Connection [jdbc:mysql://localhost:3306/mybatis_learn?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8, UserName=root@localhost, MySQL Connector Java]
[2022-03-10 15:44:06.448] [DEBUG][main] DataSourceTransactionManager: org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:389) - Releasing JDBC Connection [jdbc:mysql://localhost:3306/mybatis_learn?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8, UserName=root@localhost, MySQL Connector Java] after transaction
Exception in thread "main" java.lang.ArithmeticException: / by zero
	at code.sample.spring.transaction.business.service.AccountServiceImpl.transfer(AccountServiceImpl.java:34)
	at code.sample.spring.transaction.business.service.AccountServiceImpl$$FastClassBySpringCGLIB$$1d1de481.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at code.sample.spring.transaction.business.service.AccountServiceImpl$$EnhancerBySpringCGLIB$$2fddf366.transfer(<generated>)
	at code.sample.spring.transaction.declaratively.annotation.Main.test1(Main.java:27)
	at code.sample.spring.transaction.declaratively.annotation.Main.main(Main.java:18)