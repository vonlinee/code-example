shardingsphere:
  datasource:
    names: ds0,ds1

    # hikari数据库连接池配置
    ds0:
      type: com.zaxxer.hikari.HikariDataSource
      driverClassName: com.mysql.jdbc.Driver
      jdbcUrl: jdbc:mysql://127.0.0.1:3306/dynamic_config_0?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
      username: root
      password: root
    ds1:
      type: com.zaxxer.hikari.HikariDataSource
      driverClassName: com.mysql.jdbc.Driver
      jdbcUrl: jdbc:mysql://127.0.0.1:3306/dynamic_config_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
      username: root
      password: root
#  sharding:
#    defaultDataSourceName: ds0    # 默认的数据源
#    #      defaultTableStrategy:        # 默认的分表策略
#    tables:
#      order_main:
#        actual-data-nodes: ds0.order_main_${[0,2]},ds1.order_main_${[1,3]}
#        key-generator:
#          column: order_id
#          type: SNOWFLAKE
#        database-strategy:
#          inline:
#            sharding-column: order_id
#            algorithm-expression: ds${order_id % 2}
#        table-strategy:
#          inline:
#            sharding-column: order_id
#            algorithm-expression: order_main_${order_id % 4}
#      order_detail:
#        actual-data-nodes: ds0.order_detail_${[0,2]},ds1.order_detail_${[1,3]}
#        key-generator:
#          column: id
#          type: SNOWFLAKE
#        database-strategy:
#          inline:
#            sharding-column: order_id
#            algorithm-expression: ds${order_id % 2}
#        table-strategy:
#          inline:
#            sharding-column: order_id
#            algorithm-expression: order_detail_${order_id % 4}
#    binding-tables:   # 配置绑定表
#      - order_main, order_detail
  props:
    sql:
      show: true