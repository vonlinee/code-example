

https://www.jianshu.com/p/50fcd7f127f0


The content of element type "configuration" must match 
 "(properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?)".


https://pagehelper.github.io/docs/howtouse/




	<!-- 插件配置 -->
	<plugins>
		<!-- com.github.pagehelper为PageHelper类所在包名 -->
		<plugin interceptor="com.github.pagehelper.PageHelper">
			<property name="dialect" value="mysql" />
			<!-- 该参数默认为false 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用
				和startPage中的pageNum效果一样 -->
			<property name="offsetAsPageNum" value="false" />
			<!-- 该参数默认为false 设置为true时，使用RowBounds分页会进行count查询 -->
			<property name="rowBoundsWithCount" value="false" />
			<!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果
				（相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
			<property name="pageSizeZero" value="true" />
			<!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用
				启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
				禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
			<property name="reasonable" value="true" />
			<!-- 3.5.0版本可用 - 为了支持startPage(Object
				params)方法 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值
				可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
			<property name="params"
				value="pageNum=start;pageSize=limit;pageSizeZero=zero;reasonable=heli;count=contsql" />
		</plugin>
		<plugin interceptor="com.github.pagehelper.PageHelper">
		</plugin>
	</plugins>






log4j日志pattern配置
c category的名称，可使用｛n}限制输出的精度。例如：logger名为"a.b.c"，%c{2}将输出"b.c"。

C 产生log事件的java完全限定类名。可使用｛n}限制输出的精度。例如：“org.apache.xyz.SomeClass”,%C{2}将输出“SomeClass”。

d 时间和日期的输出格式，例如：%d{yyyy MM dd HH:mm:ss,SS}，可不带后面的日期格式字符。

F 产生log事件的java源文件名，带“.java”后缀及包名称。

l log发生位置的详细描述，包括方法名、文件名及行号。

L log发生在源文件中的位置。

m log事件的消息内容。

M log发生时所在的方法名称。

n 根据所运行的平台输出相应的行分隔字符。

p log事件的级别。

r 自程序运行至log事件产生所经过的时间。

t 产生log的线程名称。
例子：
%d{HH:mm:ss.SSS} [%t] %-5level %logger{80} - %msg%n
%d{yyyy-MM-dd HH:mm:ss,SSS} %t %-4r %p %F[%L]: %m%n

2018-07-07 22:36:23,646 main 926 DEBUG XmlHandler.java[22]: 开始解析xml文档




















