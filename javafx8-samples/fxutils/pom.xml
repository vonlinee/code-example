<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>code.example.fxutils</groupId>
	<artifactId>fxutils</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<!-- <javafx.lib.version>11.0.1</javafx.lib.version> -->
		<javafx.lib.version>8</javafx.lib.version>
	</properties>

	<dependencies>
		<!-- <dependency> -->
		<!-- <groupId>org.openjfx</groupId> -->
		<!-- <artifactId>javafx-controls</artifactId> -->
		<!-- <version>${javafx.lib.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.openjfx</groupId> -->
		<!-- <artifactId>javafx-fxml</artifactId> -->
		<!-- <version>${javafx.lib.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.openjfx</groupId> -->
		<!-- <artifactId>javafx-base</artifactId> -->
		<!-- <version>${javafx.lib.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.openjfx</groupId> -->
		<!-- <artifactId>javafx-graphics</artifactId> -->
		<!-- <version>${javafx.lib.version}</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.openjfx</groupId> -->
		<!-- <artifactId>javafx-media</artifactId> -->
		<!-- <version>${javafx.lib.version}</version> -->
		<!-- </dependency> -->

		<!-- https://mvnrepository.com/artifact/commons-dbutils/commons-dbutils -->
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.2.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.49</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.32</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.32</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>
	</dependencies>
	<build>
		<!-- 资源目录 -->
		<resources>
			<resource>
				<!-- 设定主资源目录 -->
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
				<excludes>
					<exclude>**/*.yaml</exclude>
				</excludes>
				<!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，指定处理后的资源文件输出目录，默认是${build.outputDirectory}指定的目录 -->
				<!-- <targetPath>${build.outputDirectory}</targetPath> -->
				<!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤 -->
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
</project>